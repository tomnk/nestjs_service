name: build and deploy to k8s
on:
  push:
    branches: [master, main]

env:
  ENV_TAG: ${{ secrets.ENV_TAG }}
  REGISTRY: ghcr.io
  IMAGE_NAME: nestjs_api_gateway
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-deploy-cluster
  GKE_ZONE: asia-east1-a
  DEPLOYMENT_NAME: nestjs_api_gateway

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags:  ghcr.io/tomnk/nestjs_api_gateway/${{ env.IMAGE_NAME }}:latest
      # Build the Docker image
      # - name: Build
      #   run: |-
      #     docker build \
      #       --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
      #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
      #       --build-arg GITHUB_REF="$GITHUB_REF" \
      #       .
  # deploy-image:
  #   runs-on: ubuntu-latest
  #   needs: build-image
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #      # Setup gcloud CLI
  #     - uses: google-github-actions/setup-gcloud@master
  #       with:
  #         service_account_key: ${{ secrets.GKE_SA_KEY }}
  #         project_id: ${{ env.PROJECT_ID }}

  #     # Configure docker to use the gcloud command-line tool as a credential helper
  #     - run: |-
  #         gcloud --quiet auth configure-docker
      
  #     # Get the GKE credentials so we can deploy to the cluster
  #     - uses: google-github-actions/get-gke-credentials@main
  #       with:
  #         cluster_name: ${{ env.GKE_CLUSTER }}
  #         location: ${{ env.GKE_ZONE }}
  #         credentials: ${{ secrets.GKE_SA_KEY }}

  #     # Push the Docker image to Google Container Registry
  #     - name: Publish
  #       run: |-
  #         docker push "gcr.io/$PROJECT_ID/$ENV_TAG/$IMAGE:$GITHUB_SHA"

  #     # Set up kustomize
  #     - name: Set up Kustomize
  #       run: |-
  #         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
  #         chmod u+x ./kustomize

  #     # Deploy the Docker image to the GKE cluster
  #     - name: Deploy
  #       run: |-
  #         ./kustomize edit set image gcr.io/PROJECT_ID/ENV_TAG/IMAGE:TAG=gcr.io/$PROJECT_ID/$ENV_TAG/$IMAGE:$GITHUB_SHA
  #         ./kustomize build . | kubectl apply -f -
  #         kubectl rollout status deployment/$DEPLOYMENT_NAME
  #         kubectl get services -o wide 